buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath("com.netflix.nebula:gradle-ospackage-plugin:2.2.0")
       
    }
}
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'
apply plugin: 'os-package'

jar {
    baseName = 'asset-client'
    version = '1.0.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("ch.qos.logback:logback-classic:1.+")
}

task packageRpm(type: Rpm, dependsOn: build) {
	packageName = jar.baseName
	packageDescription = 'Asset Client'
	version = jar.version
	release = '1'
	os = LINUX
	arch = NOARCH
	type = SOURCE
	user 'root'
	permissionGroup 'root'

	into "apple/ball/${jar.baseName}"

	from("build/libs/${jar.baseName}-docker.tar") {
	    into 'lib'
        fileMode = 0755
	}
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    //applicationName = jar.baseName 
    //here 'tag' defines repository/tag
    tag = "asset/${jar.baseName}"
    tagVersion = jar.version
    addFile("build/libs/${jar.baseName}-${jar.version}.jar", "app.jar")
    dockerfile = file('src/main/docker/Dockerfile')
 
    //to backup image --> docker save -o {tarname} {image name or tag}    
   doLast{
        exec {
            executable "sh"
            args "-c","docker save -o ./build/libs/${jar.baseName}-docker.tar 'asset/${jar.baseName}'"
        }
    }
}
